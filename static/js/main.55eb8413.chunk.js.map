{"version":3,"sources":["Components/Usuarios.jsx","index.js"],"names":["Usuarios","useState","usuarios","setUsuarios","useEffect","axios","get","then","res","pessoa","data","cards","card_number","cvv","expiry_date","pagamentoOpen","setPagamentoOpen","listTransp","setListTransp","payName","setPayName","abrirResultado","setAbrirResultado","valorDinheiro","setValorDinheiro","campoNecessario","setCampoNecessario","valorCartao","setValorCartao","naoConcluido","setNaoConcluido","map","item","className","style","display","src","img","alt","name","id","username","onClick","thousandSeparator","value","onChange","e","target","prefix","inputmode","placeholder","event","substr","rootComponet","document","getElementById","ReactDOM","render"],"mappings":"6MAOe,WAAAA,GAGX,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACNC,IAAMC,IAAN,oDACCC,MAAK,SAAAC,GACF,IAAMC,EAASD,EAAIE,KACnBP,EAAYM,QAElB,IAGF,IAAIE,EAAQ,CAER,CACEC,YAAa,mBACbC,IAAK,IACLC,YAAa,SAGf,CACEF,YAAa,mBACbC,IAAK,IACLC,YAAa,UAKnB,EAA0Cb,mBAAS,QAAnD,mBAAOc,EAAP,KAAsBC,EAAtB,KACA,EAAoCf,mBAAS,QAA7C,mBAAOgB,EAAP,KAAmBC,EAAnB,KACA,EAA8BjB,mBAAS,IAAvC,mBAAOkB,EAAP,KAAgBC,EAAhB,KACA,EAA4CnB,mBAAS,QAArD,mBAAOoB,EAAP,KAAuBC,EAAvB,KACA,EAA0CrB,mBAAS,IAAnD,mBAAOsB,EAAP,KAAsBC,EAAtB,KACA,EAA8CvB,mBAAS,QAAvD,mBAAOwB,EAAP,KAAwBC,EAAxB,KACA,EAAsCzB,mBAAS,KAA/C,mBAAO0B,EAAP,KAAoBC,EAApB,KACA,EAAwC3B,mBAAS,IAAjD,mBAAO4B,EAAP,KAAqBC,EAArB,KAmDA,OACI,qCAEK5B,EAAS6B,KAAI,SAACC,GAAD,OACV,sBAAKC,UAAU,WAAWC,MAAO,CAACC,QAAQlB,GAA1C,UACI,qBAAKgB,UAAU,cAAf,SACI,qBAAKG,IAAKJ,EAAKK,IAAKC,IAAI,qBAE5B,sBAAKL,UAAU,qBAAf,UACI,yCACWD,EAAKO,QAEhB,uCACSP,EAAKQ,GADd,gBAC+BR,EAAKS,eAGxC,qBAAKR,UAAU,aAAf,SACI,wBAAQS,QAAS,WA1DrC,IAAuBH,IA0DkCP,EAAKO,KAzD1DvB,EAAiB,QACjBE,EAAc,QACdE,EAAWmB,IAuDK,2BAKZ,sBAAKN,UAAU,cAAcC,MAAO,CAACC,QAAQpB,GAA7C,UACI,sBAAKkB,UAAU,cAAf,UACI,mDAAqB,4BAAId,OACzB,sBAAMc,UAAU,UAAUS,QA9B1C,WACI1B,EAAiB,QACjBE,EAAc,SA4BF,kBAEJ,sBAAKe,UAAU,aAAf,UACI,cAAC,IAAD,CAAcU,mBAAmB,EAAMC,MAAOrB,EAAesB,SA9D7E,SAAqBC,GACjBtB,EAAiBsB,EAAEC,OAAOH,OAC1BlB,EAAmB,SA4D6EsB,OAAQ,MAAOC,UAAU,UAAUC,YAAY,YACnI,mBAAGhB,MAAO,CAACC,QAASV,GAApB,qCAEJ,yBAAQmB,MAAOjB,EAAakB,SA9EvC,SAAsBM,GACnBvB,EAAeuB,EAAMJ,OAAOH,QA6EpB,UACI,yBAAQA,MAAM,IAAd,iCAAoCjC,EAAM,GAAGC,YAAYwC,QAAQ,MACjE,yBAAQR,MAAM,IAAd,iCAAoCjC,EAAM,GAAGC,YAAYwC,QAAQ,SAErE,wBAAQV,QAAS,WA9DH,KAAlBnB,EACAG,EAAmB,SAGfI,EADkB,MAAlBP,EACgB,GAEA,UAEpBP,EAAiB,QACjBM,EAAkB,QAClBE,EAAiB,IACjBE,EAAmB,UAmDf,sBAIJ,sBAAKO,UAAU,cAAcC,MAAO,CAACC,QAASd,GAA9C,UACI,uDACA,6CAAe,iCAASQ,IAAxB,mCACA,wBAAQa,QAAS,WApDzBpB,EAAkB,QAClBJ,EAAc,SAmDN,2BCpIVmC,EAAeC,SAASC,eAAe,QAE7CC,IAASC,OACD,8BACI,cAAC,EAAD,MAEVJ,K","file":"static/js/main.55eb8413.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./CSS/style.css\";\r\nimport axios from \"axios\"\r\nimport NumberFormat from \"react-number-format\"\r\nimport { checkPropTypes } from \"prop-types\";\r\n\r\nexport default Usuarios => {\r\n\r\n    //setando os usuários\r\n    const [usuarios, setUsuarios] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://www.mocky.io/v2/5d531c4f2e0000620081ddce`)\r\n        .then(res => {\r\n            const pessoa = res.data;\r\n            setUsuarios(pessoa);\r\n        })\r\n    },[])\r\n\r\n    //lista dos cartões\r\n    let cards = [\r\n        // cartão válido\r\n        {\r\n          card_number: '1111111111111111',\r\n          cvv: 789,\r\n          expiry_date: '01/18',\r\n        },\r\n        // cartão inválido\r\n        {\r\n          card_number: '4111111111111234',\r\n          cvv: 123,\r\n          expiry_date: '01/20',\r\n        },\r\n    ];\r\n\r\n    //modal\r\n    const [pagamentoOpen, setPagamentoOpen] = useState('none');\r\n    const [listTransp, setListTransp] = useState('flex');\r\n    const [payName, setPayName] = useState('');\r\n    const [abrirResultado, setAbrirResultado] = useState('none');\r\n    const [valorDinheiro, setValorDinheiro] = useState('');\r\n    const [campoNecessario, setCampoNecessario] = useState('none');\r\n    const [valorCartao, setValorCartao] = useState('1');\r\n    const [naoConcluido, setNaoConcluido] = useState('');\r\n    \r\n\r\n     // Função para detectar modificação e resgatar valor no selection\r\n     function handleChange(event){\r\n        setValorCartao(event.target.value);\r\n    }\r\n\r\n\r\n    // Abrir o modal de pagameto\r\n    function modalPagOpen (name) {\r\n        setPagamentoOpen(\"flex\")\r\n        setListTransp(\"none\")\r\n        setPayName(name)\r\n    }\r\n\r\n    // Função para filtrar o valor do dinheiro\r\n    function inputChange(e){\r\n        setValorDinheiro(e.target.value);\r\n        setCampoNecessario(\"none\");\r\n    }\r\n\r\n    //Abrir o modal do recibo de pagamento\r\n    function modalAbrirResultado () {\r\n        if (valorDinheiro === '') {\r\n            setCampoNecessario('flex');\r\n        } else {\r\n            if (valorDinheiro === \"1\") {\r\n                setNaoConcluido(\"\");\r\n            } else {\r\n                setNaoConcluido(\"não\");\r\n            }\r\n            setPagamentoOpen('none');\r\n            setAbrirResultado('flex');\r\n            setValorDinheiro('');\r\n            setCampoNecessario('none');\r\n        }\r\n    }\r\n\r\n    //fechar modal\r\n    function modalFecharResultado () {\r\n        setAbrirResultado('none');\r\n        setListTransp('flex');\r\n    }\r\n\r\n    //fechar modal no botão X\r\n    function modalFecharX () {\r\n        setPagamentoOpen('none');\r\n        setListTransp('flex');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* lista de usuários */}\r\n            {usuarios.map((item) =>\r\n                <div className='usuarios' style={{display:listTransp}}>\r\n                    <div className='img-usuario'>\r\n                        <img src={item.img} alt='Imagem usuario'/>\r\n                    </div>\r\n                    <div className='identifica-usuario'>\r\n                        <div>\r\n                            Nome: {item.name}\r\n                        </div>\r\n                        <div>\r\n                            ID: {item.id} - Username: {item.username}\r\n                        </div>\r\n                    </div>\r\n                    <div className='botaoPagar'>\r\n                        <button onClick={() => {modalPagOpen(item.name)}}>Pagar</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {/* modal de pagamento */}\r\n            <div className='modalAberto' style={{display:pagamentoOpen}}>\r\n                <div className='headerModal'>\r\n                    <span>Pagamento para <b>{payName}</b></span>\r\n                    <span className='fecharX' onClick={modalFecharX}>X</span>\r\n                </div>\r\n                <div className='inputValor'>\r\n                    <NumberFormat thousandSeparator={true} value={valorDinheiro} onChange={inputChange} prefix={'R$ '} inputmode=\"numeric\" placeholder=\"R$ 0,00\"/>\r\n                    <p style={{display: campoNecessario}}>Campo Obrigatório</p>\r\n                </div>\r\n                <select value={valorCartao} onChange={handleChange}>\r\n                    <option value='1'>Cartão com final {cards[0].card_number.substr(-4)}</option>\r\n                    <option value='2'>Cartão com final {cards[1].card_number.substr(-4)}</option>\r\n                </select>\r\n                <button onClick={() => {modalAbrirResultado ()}}>Pagar</button>\r\n            </div>\r\n\r\n            {/*Modal recibo do pagamento */}\r\n            <div className='modalAberto' style={{display: abrirResultado}}>\r\n                <span>Recibo de pagamento</span>\r\n                <p>O pagamento <strong>{naoConcluido}</strong> foi concluído com sucesso</p>\r\n                <button onClick={() => {modalFecharResultado()}}>Fechar</button>\r\n            </div>  \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n/* {cards.map((card, index) =>\r\n    <option value={'card'+index} key={'card'+index}>Cartão com final {card.card_number.substr(-4)}</option>\r\n)}  exemplo do ezequiel*/","  \r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport Usuarios from \"./Components/Usuarios\"\r\n\r\nconst rootComponet = document.getElementById(\"root\")\r\n\r\nReactDOM.render(\r\n        <div>\r\n            <Usuarios/>\r\n        </div>\r\n, rootComponet)"],"sourceRoot":""}